name: Build using vcpkg

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest ]

    runs-on: ${{ matrix.os }}
    name: "${{ github.workflow }}: ${{ matrix.os }}"

    env:
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/vcpkg/bincache
      sgl_REPO_DIR: ${{ github.workspace }}/sgl-repo
      sgl_DIR: ${{ github.workspace }}/sgl

    steps:
    - uses: actions/checkout@v2

    - uses: lukka/get-cmake@latest
      with:
        cmakeVersion: 3.29.0

    - name: Install Vulkan SDK
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          distro_code_name="$(lsb_release -c | grep -oP "\:\s+\K\S+")"
          os_arch="$(uname -m)"
          if ! curl -s -I "https://packages.lunarg.com/vulkan/dists/${distro_code_name}/" | grep "2 404" > /dev/null; then
            echo "Installing Vulkan SDK from a PPA..."
            wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
            sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-${distro_code_name}.list \
            https://packages.lunarg.com/vulkan/lunarg-vulkan-${distro_code_name}.list
            sudo apt update
            sudo apt install vulkan-sdk
          else
            echo "Unpacking Vulkan SDK from an archive file..."
            curl --silent --show-error --fail -O https://sdk.lunarg.com/sdk/download/latest/linux/vulkan-sdk.tar.gz
            mkdir -p VulkanSDK
            tar -xf vulkan-sdk.tar.gz -C VulkanSDK
            # Fix pkgconfig file.
            shaderc_pkgconfig_file="VulkanSDK/$(ls VulkanSDK)/$os_arch/lib/pkgconfig/shaderc.pc"
            if [ -f $shaderc_pkgconfig_file ]; then
              prefix_path=$(realpath "VulkanSDK/$(ls VulkanSDK)/$os_arch")
              sed -i '3s;.*;prefix=\"'$prefix_path'\";' "$shaderc_pkgconfig_file"
              sed -i '5s;.*;libdir=${prefix}/lib;' "$shaderc_pkgconfig_file"
              echo "PKG_CONFIG_PATH=\"$(realpath "VulkanSDK/$(ls VulkanSDK)/$os_arch/lib/pkgconfig")\"" >> $GITHUB_ENV
            fi
          fi
          # Also install the dependencies for building ports like GLEW here.
          sudo apt install -y libgl-dev libxmu-dev libxi-dev libx11-dev libxft-dev libxext-dev libxrandr-dev \
          libwayland-dev libxkbcommon-dev libegl1-mesa-dev libibus-1.0-dev autoconf-archive
        elif [ "$RUNNER_OS" == "Windows" ]; then
          # Chocolatey is broken as of 2023-07-07
          #choco install vulkan-sdk
          curl -O https://sdk.lunarg.com/sdk/download/1.3.250.1/windows/VulkanSDK-1.3.250.1-Installer.exe
          ./VulkanSDK-1.3.250.1-Installer.exe --accept-licenses --default-answer --confirm-command install
        elif [ "$RUNNER_OS" == "macOS" ]; then
          vulkansdk_filename=$(curl -sIkL https://sdk.lunarg.com/sdk/download/latest/mac/vulkan-sdk.dmg | sed -r '/filename=/!d;s/.*filename=(.*)$/\1/')
          VULKAN_SDK_VERSION=$(echo $vulkansdk_filename | sed -r 's/^.*vulkansdk-macos-(.*)\.dmg.*$/\1/')
          curl -O https://sdk.lunarg.com/sdk/download/latest/mac/vulkan-sdk.dmg
          sudo hdiutil attach vulkan-sdk.dmg
          # The directory was changed from '/Volumes/VulkanSDK' to, e.g., 'vulkansdk-macos-1.3.261.0'.
          vulkan_dir=$(find /Volumes -maxdepth 1 -name '[Vv]ulkan*' -not -path "/Volumes/VMware*" || true)
          sudo "${vulkan_dir}/InstallVulkan.app/Contents/MacOS/InstallVulkan" \
          --root ~/VulkanSDK/$VULKAN_SDK_VERSION --accept-licenses --default-answer --confirm-command install
          cd ~/VulkanSDK/$VULKAN_SDK_VERSION
          sudo ./install_vulkan.py || true
          sudo hdiutil unmount "${vulkan_dir}"
          export HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1
          brew update
          #rm /usr/local/bin/2to3 || true
          #rm /usr/local/bin/idle3 || true
          #rm /usr/local/bin/pydoc3 || true
          #rm /usr/local/bin/python3 || true
          #rm /usr/local/bin/python3-config || true
          brew install --force --overwrite llvm libomp pkg-config autoconf automake autoconf-archive
        else
          echo "$RUNNER_OS is not supported."
          exit 1
        fi

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgGitURL: 'https://github.com/chrismile/vcpkg.git'
        vcpkgGitCommitId: '00e25d7ae041fea1075e79f017693cfce26088d1'
        doNotCacheOnWorkflowFailure: true

    - name: Configure CMake
      shell: bash
      run: |
        cmake -B "${{github.workspace}}/build" -DCMAKE_TOOLCHAIN_FILE="${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
